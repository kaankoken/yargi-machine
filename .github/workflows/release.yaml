name: Release

on: workflow_dispatch

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      discussions: write
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
      is_released: ${{ steps.semantic.outputs.new_release_published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic # Need an `id` for output variables
        with:
          extra_plugins: |
            @semantic-release/exec

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "VERSION=${{ steps.semantic.outputs.new_release_version }}"
          echo $VERSION

  release-notes:
    name: Generate Release notes
    runs-on: ubuntu-latest
    needs: [ release ]
    if: ${{ needs.release.outputs.is_released == 'true' }}
    permissions:
      contents: write # to be able to publish a GitHub release
      discussions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff-r
        with:
          config: ./config/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: ./.CHANGES.md

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ needs.release.outputs.version }}
          body_path: ./.CHANGES.md
          prerelease: false
          generate_release_notes: false

  upload-files:
    name: upload files after release
    runs-on: ubuntu-latest
    needs: [ release ]
    if: ${{ needs.release.outputs.is_released == 'true' }}
    permissions:
      contents: write # to be able to publish a GitHub release
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          fetch-depth: 0

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP }}

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: 'npm'

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: ./config/cliff.toml
        env:
          OUTPUT: ./docs/CHANGELOG.md

      - name: Update package version
        run: npm version --no-git-tag-version "${{ needs.release.outputs.version }}" --allow-same-version

      - name: Create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.generate_token.outputs.token }}
          committer: GitHub <noreply@github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          branch: release-v${{ needs.release.outputs.version }}
          delete-branch: false
          title: "chore: release artifacts"
          commit-message: "chore(release): update docs & version"
          draft: false
          base: master
          add-paths: |
            docs/CHANGELOG.md
            package.json
            package-lock.json
          labels: |
            report
            automated pr
            changelog
            versioning
          body: |
            Automated Update

            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request

  update-coverage:
    name: update coverage-badge
    runs-on: ubuntu-latest
    needs: [ upload-files ]
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: 'npm'

      - run: npm install --save-dev nyc source-map-support @istanbuljs/nyc-config-typescript
      - name: generate code coverage
        run: npm run codecov

      - name: Create coverage badge
        uses: tj-actions/coverage-badge-js@v1.3

      - name: Deploy to Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: coverage # The folder the action should deploy.
          branch: gh-pages

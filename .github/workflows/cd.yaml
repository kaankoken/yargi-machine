name: CD

on:
  workflow_dispatch:
    inputs:
      staging:
        description: "Identify as whether staging or not"
        required: false
        default: false
        type: boolean
      tag:
        description: "The version tag"
        required: true
        type: string

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  docker-image:
    name: Generate docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      # For mobile project, generate apk or ipa for this step
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
           ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest
            type=raw,value=${{ inputs.tag }}
            type=semver,pattern={{version}}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          sbom: true
          provenance: true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Test the image
        run: |
          docker run --rm ${{ env.IMAGE_NAME }} -V

      - name: Scan the image
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE_NAME }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          sbom: true
          provenance: true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
